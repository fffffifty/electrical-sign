{
    "compilerOptions": {
      "target": "es5", // 编译之后生成的JavaScript文件需要遵循的标准，选择es5为了使包具有更好的浏览器兼容性
      "module": "commonjs", // 指定生成哪个模块系统代码 默认值：target === "ES3" or "ES5" ? "CommonJS" : "ES6"
      "declaration": true, // 是否生成对应的声明文件，默认值false，在构建包时，应该设置为true，typescript会将生成的声明文件和对应编译后的JavaScript代码导出，以便包可以在typescript和JavaScript项目中同时使用。本项目生成的声明文件是/lib/index.d.ts
      "outDir": "./lib", // 指定输出目录。编译后的JavaScript代码会在与tsconfig.json同级的lib文件夹中
      "strict": true, // 是否启用所有严格类型检查选项，默认值：false
      "lib": ["DOM","ESNext","DOM.Iterable","ES6"], // 编译需要的库文件，例如你指定的 target 是 ES5，但是在代码中使用了 ES6 特性，就需要在 lib 中加上 ES6。默认值：如果 lib 没有指定默认注入的库的列表，默认注入的库为：target ES5：DOM，ES5，ScriptHost；target ES6：DOM，ES6，DOM.Iterable，ScriptHost
      "jsx": "react", // 指定JSX代码生成：“ preserve”，“ react-native”或“ react”
    },
    "include": ["./src"], //指定编译的目录
    "exclude": ["node_modules", "**/__tests__/*"] //指定不编译的目录，node_modules 和 __tests__ 只是在开发阶段使用，构建阶段无需编译
}